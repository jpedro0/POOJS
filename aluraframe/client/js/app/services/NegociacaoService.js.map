{"version":3,"sources":["../../app-ES6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","Promise","all","obterNegociacaoDaSemana","obterNegociacaoDaSemanaAnterior","obterNegociacaoDaSemanaRetrasada","then","negociacoes","reduce","novoArray","array","concat","catch","Error","erro","resolve","reject","get","map","Date","obj","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente","outraNegociacao","JSON","stringify"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\n\r\nexport class NegociacaoService{\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacaoDaSemana(),\r\n            this.obterNegociacaoDaSemanaAnterior(),\r\n            this.obterNegociacaoDaSemanaRetrasada()\r\n        ]).then(negociacoes =>\r\n            negociacoes.reduce((novoArray, array) => novoArray.concat(array), [])\r\n        ).catch(erro => {\r\n            throw new Error(erro)\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemana(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemanaAnterior(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações anteriores');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemanaRetrasada(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações retrasadas');\r\n            });\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.adiciona(negociacao))\r\n                    .then(() => 'Negociação adicionada com sucesso')\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel adicionar a negociação')\r\n                    });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.listaTodos())\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel carregar a lista de negociações');\r\n                    });\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.apagarTodos())\r\n                    .then(() => 'Lista de Negociações apagadas com sucesso')\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel apagar a lista de negociações');\r\n                    });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n                    .then(negociacoes => \r\n                        negociacoes.filter(negociacao => \r\n                            !listaAtual.some(negociacaoExistente =>\r\n                                negociacao.isEquals(negociacaoExistente))))\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel buscar a lista de negociações importadas');\r\n                    });\r\n    }\r\n\r\n    isEquals(outraNegociacao){\r\n        return JSON.stringify(this) == JSON.stringify(outraNegociacao);\r\n    }\r\n}\r\n"]}