{"version":3,"sources":["../../app-ES6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","all","obterNegociacaoDaSemana","obterNegociacaoDaSemanaAnterior","obterNegociacaoDaSemanaRetrasada","then","negociacoes","reduce","novoArray","array","concat","catch","Error","erro","resolve","reject","get","map","Negociacao","Date","obj","data","quantidade","valor","console","log","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","equal","negociacaoExistente","negociacaoExtena","JSON","stringify"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService{\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacaoDaSemana(),\r\n            this.obterNegociacaoDaSemanaAnterior(),\r\n            this.obterNegociacaoDaSemanaRetrasada()\r\n        ]).then(negociacoes =>\r\n            negociacoes.reduce((novoArray, array) => novoArray.concat(array), [])\r\n        ).catch(erro => {\r\n            throw new Error(erro)\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemana(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/semana')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemanaAnterior(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/anterior')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações anteriores');\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacaoDaSemanaRetrasada(){\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes =>\r\n                resolve(negociacoes.map(obj => \r\n                    new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possivel obter as negociações retrasadas');\r\n            });\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.adiciona(negociacao))\r\n                    .then(() => 'Negociação adicionada com sucesso')\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel adicionar a negociação')\r\n                    });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.listaTodos())\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel carregar a lista de negociações');\r\n                    });\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n                    .getConnection()\r\n                    .then(connection => new NegociacaoDao(connection))\r\n                    .then(dao => dao.apagarTodos())\r\n                    .then(() => 'Lista de Negociações apagadas com sucesso')\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel apagar a lista de negociações');\r\n                    });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n                    .then(negociacoes => \r\n                        negociacoes.filter(negociacao => \r\n                            !listaAtual.some(negociacaoExistente =>\r\n                                negociacao.equal(negociacaoExistente))))\r\n                    .catch(erro => {\r\n                        console.log(erro);\r\n                        throw new Error('Não foi possivel buscar a lista de negociações importadas');\r\n                    });\r\n    }\r\n\r\n    equal(negociacaoExtena){\r\n        return JSON.stringify(this) == JSON.stringify(negociacaoExtena);\r\n    }\r\n}\r\n"]}